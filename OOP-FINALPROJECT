import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;

public class LoginSystemGUI {
    private static JFrame mainFrame;
    private static JPanel mainPanel;
    private static CardLayout cardLayout;
    private static HashMap<String, String> users = new HashMap<>();
    private static int userIdCounter = 1; // To generate user IDs

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            createAndShowGUI();
        });
    }

    private static void createAndShowGUI() {
        mainFrame = new JFrame("Login System");
        mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        mainPanel = new JPanel();
        cardLayout = new CardLayout();
        mainPanel.setLayout(cardLayout);

        createLoginPanel();
        createRegisterPanel();
        createProductPanel(); // Adding the provided ZingerRiceWrapSystem code

        mainFrame.add(mainPanel);
        mainFrame.setSize(500, 250); // Set initial frame size
        mainFrame.setLocationRelativeTo(null);
        mainFrame.setVisible(true);
    }

    private static void createLoginPanel() {
        JPanel loginPanel = new JPanel(new GridLayout(4, 2, 10, 10));
        loginPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        Font labelFont = new Font("Arial", Font.BOLD, 14);

        JLabel usernameLabel = new JLabel("Username:");
        usernameLabel.setFont(labelFont);
        JTextField usernameField = new JTextField();
        JLabel passwordLabel = new JLabel("Password:");
        passwordLabel.setFont(labelFont);
        JPasswordField passwordField = new JPasswordField();
        JButton loginButton = new JButton("Login");
        JButton goToRegisterButton = new JButton("Register");

        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String username = usernameField.getText();
                String password = new String(passwordField.getPassword());

                if (users.containsKey(username) && users.get(username).equals(password)) {
                    JOptionPane.showMessageDialog(mainFrame, "Login successful!");
                    cardLayout.show(mainPanel, "ProductPanel"); // Show Product/Service panel after successful login
                } else {
                    JOptionPane.showMessageDialog(mainFrame, "Invalid username/password combination.");
                }
            }
        });

        goToRegisterButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                cardLayout.show(mainPanel, "Register");
            }
        });

        loginPanel.add(usernameLabel);
        loginPanel.add(usernameField);
        loginPanel.add(passwordLabel);
        loginPanel.add(passwordField);
        loginPanel.add(loginButton);
        loginPanel.add(goToRegisterButton);

        mainPanel.add(loginPanel, "Login");
    }

    private static void createRegisterPanel() {
        JPanel registerPanel = new JPanel(new GridLayout(6, 2, 10, 10));
        registerPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        Font labelFont = new Font("Arial", Font.BOLD, 14);

        JLabel idLabel = new JLabel("ID:");
        idLabel.setFont(labelFont);
        JTextField idField = new JTextField();
        JLabel usernameLabel = new JLabel("Username:");
        usernameLabel.setFont(labelFont);
        JTextField usernameField = new JTextField();
        JLabel passwordLabel = new JLabel("Password:");
        passwordLabel.setFont(labelFont);
        JPasswordField passwordField = new JPasswordField();
        JLabel confirmPasswordLabel = new JLabel("Confirm Password:");
        confirmPasswordLabel.setFont(labelFont);
        JPasswordField confirmPasswordField = new JPasswordField();
        JButton registerButton = new JButton("Register");
        JButton goToLoginButton = new JButton("Login");

        registerButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String id = idField.getText();
                String username = usernameField.getText();
                String password = new String(passwordField.getPassword());
                String confirmPassword = new String(confirmPasswordField.getPassword());

                if (id.trim().isEmpty() || username.trim().isEmpty() || password.trim().isEmpty() || confirmPassword.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(mainFrame, "Please fill in all fields.");
                    return;
                }

                if (users.containsKey(username)) {
                    JOptionPane.showMessageDialog(mainFrame, "Username already exists. Please choose a different one.");
                } else if (!password.equals(confirmPassword)) {
                    JOptionPane.showMessageDialog(mainFrame, "Passwords do not match. Please try again.");
                } else {
                    users.put(username, password);
                    JOptionPane.showMessageDialog(mainFrame, "Registration successful!");
                    cardLayout.show(mainPanel, "Login");
                }
            }
        });

        goToLoginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                cardLayout.show(mainPanel, "Login");
            }
        });

        registerPanel.add(idLabel);
        registerPanel.add(idField);
        registerPanel.add(usernameLabel);
        registerPanel.add(usernameField);
        registerPanel.add(passwordLabel);
        registerPanel.add(passwordField);
        registerPanel.add(confirmPasswordLabel);
        registerPanel.add(confirmPasswordField);
        registerPanel.add(registerButton);
        registerPanel.add(goToLoginButton);

        mainPanel.add(registerPanel, "Register");
    }

    private static void createProductPanel() {
        JPanel productPanel = new JPanel(new GridLayout(5, 2, 10, 10));
        productPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        Font labelFont = new Font("Arial", Font.BOLD, 14);

        JLabel productCodeLabel = new JLabel("Product Code:");
        productCodeLabel.setFont(labelFont);
        JTextField productCodeField = new JTextField();
        JLabel descriptionLabel = new JLabel("Description:");
        descriptionLabel.setFont(labelFont);
        JTextField descriptionField = new JTextField();
        JLabel priceLabel = new JLabel("Price:");
        priceLabel.setFont(labelFont);
        JTextField priceField = new JTextField();
        JLabel quantityLabel = new JLabel("Quantity:");
        quantityLabel.setFont(labelFont);
        JTextField quantityField = new JTextField();

        JButton addProductButton = new JButton("Add Product");

        addProductButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Retrieve the entered product information
                String productCode = productCodeField.getText().trim();
                String description = descriptionField.getText().trim();
                String price = priceField.getText().trim();
                String quantity = quantityField.getText().trim();

                // Validate and process the entered information as needed
                // For now, let's display the gathered information
                String productInfo = "Product Code: " + productCode + "\n"
                        + "Description: " + description + "\n"
                        + "Price: " + price + "\n"
                        + "Quantity: " + quantity;
                JOptionPane.showMessageDialog(mainFrame, productInfo);
            }
        });

        productPanel.add(productCodeLabel);
        productPanel.add(productCodeField);
        productPanel.add(descriptionLabel);
        productPanel.add(descriptionField);
        productPanel.add(priceLabel);
        productPanel.add(priceField);
        productPanel.add(quantityLabel);
        productPanel.add(quantityField);
        productPanel.add(new JLabel()); // Placeholder for alignment
        productPanel.add(addProductButton);

        mainPanel.add(productPanel, "ProductPanel");
    }
}
